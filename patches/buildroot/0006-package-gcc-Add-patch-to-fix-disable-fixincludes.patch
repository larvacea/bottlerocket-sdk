From 2c958d510e4b24fc9803821a2d9f505ec302037a Mon Sep 17 00:00:00 2001
From: Ben Cressey <bcressey@amazon.com>
Date: Sun, 17 Nov 2024 04:30:51 +0000
Subject: [PATCH] package/gcc: Add patch to fix disable-fixincludes

Signed-off-by: Ben Cressey <bcressey@amazon.com>
---
 .../9101-Support-disable-fixincludes.patch    | 144 ++++++++++++++++++
 1 file changed, 144 insertions(+)
 create mode 100644 package/gcc/11.4.0/9101-Support-disable-fixincludes.patch

diff --git a/package/gcc/11.4.0/9101-Support-disable-fixincludes.patch b/package/gcc/11.4.0/9101-Support-disable-fixincludes.patch
new file mode 100644
index 0000000000..a0c0b9c7fe
--- /dev/null
+++ b/package/gcc/11.4.0/9101-Support-disable-fixincludes.patch
@@ -0,0 +1,144 @@
+From c8655da6203a1804d313b9cea543f3a76652a7dc Mon Sep 17 00:00:00 2001
+From: Martin Liska <mliska@suse.cz>
+Date: Wed, 31 Aug 2022 21:55:45 +0200
+Subject: [PATCH] Support --disable-fixincludes.
+
+Always install limits.h and syslimits.h header files
+to include folder.
+
+When --disable-fixincludes is used, then no system header files
+are fixed by the tools in fixincludes. Moreover, the fixincludes
+tools are not built any longer.
+
+gcc/ChangeLog:
+
+	* Makefile.in: Always install limits.h and syslimits.h to
+	include folder.
+	* configure.ac: Assign STMP_FIXINC blank if
+	--disable-fixincludes is used.
+	* configure: Regenerate.
+---
+ gcc/Makefile.in  | 30 +++++++++++++-----------------
+ gcc/configure    | 10 ++++++++--
+ gcc/configure.ac |  6 ++++++
+ 3 files changed, 27 insertions(+), 19 deletions(-)
+
+diff --git a/gcc/Makefile.in b/gcc/Makefile.in
+index 7bfd6ce653f..569f379c81a 100644
+--- a/gcc/Makefile.in
++++ b/gcc/Makefile.in
+@@ -3133,24 +3133,27 @@ stmp-int-hdrs: $(STMP_FIXINC) $(T_GLIMITS_H) $(USER_H) fixinc_list
+ 	set -e; for ml in `cat fixinc_list`; do \
+ 	  sysroot_headers_suffix=`echo $${ml} | sed -e 's/;.*$$//'`; \
+ 	  multi_dir=`echo $${ml} | sed -e 's/^[^;]*;//'`; \
+-	  fix_dir=include-fixed$${multi_dir}; \
++	  include_dir=include$${multi_dir}; \
+ 	  if $(LIMITS_H_TEST) ; then \
+ 	    cat $(srcdir)/limitx.h $(T_GLIMITS_H) $(srcdir)/limity.h > tmp-xlimits.h; \
+ 	  else \
+ 	    cat $(T_GLIMITS_H) > tmp-xlimits.h; \
+ 	  fi; \
+-	  $(mkinstalldirs) $${fix_dir}; \
+-	  chmod a+rx $${fix_dir} || true; \
++	  $(mkinstalldirs) $${include_dir}; \
++	  chmod a+rx $${include_dir} || true; \
+ 	  $(SHELL) $(srcdir)/../move-if-change \
+ 	    tmp-xlimits.h  tmp-limits.h; \
+-	  rm -f $${fix_dir}/limits.h; \
+-	  cp -p tmp-limits.h $${fix_dir}/limits.h; \
+-	  chmod a+r $${fix_dir}/limits.h; \
++	  rm -f $${include_dir}/limits.h; \
++	  cp -p tmp-limits.h $${include_dir}/limits.h; \
++	  chmod a+r $${include_dir}/limits.h; \
++	  cp $(srcdir)/gsyslimits.h $${include_dir}/syslimits.h; \
+ 	done
+ # Install the README
+-	rm -f include-fixed/README
+-	cp $(srcdir)/../fixincludes/README-fixinc include-fixed/README
+-	chmod a+r include-fixed/README
++	if [ x$(STMP_FIXINC) != x ]; then \
++	  rm -f include-fixed/README; \
++	  cp $(srcdir)/../fixincludes/README-fixinc include-fixed/README; \
++	  chmod a+r include-fixed/README; \
++	fi;
+ 	$(STAMP) $@
+ 
+ .PHONY: install-gcc-tooldir
+@@ -3235,13 +3238,6 @@ stmp-fixinc: gsyslimits.h macro_list fixinc_list \
+ 	      cd $(build_objdir)/fixincludes && \
+ 	      $(SHELL) ./fixinc.sh "$${gcc_dir}/$${fix_dir}" \
+ 	        $(BUILD_SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS) ); \
+-	    rm -f $${fix_dir}/syslimits.h; \
+-	    if [ -f $${fix_dir}/limits.h ]; then \
+-	      mv $${fix_dir}/limits.h $${fix_dir}/syslimits.h; \
+-	    else \
+-	      cp $(srcdir)/gsyslimits.h $${fix_dir}/syslimits.h; \
+-	    fi; \
+-	    chmod a+r $${fix_dir}/syslimits.h; \
+ 	  done; \
+ 	fi
+ 	$(STAMP) stmp-fixinc
+@@ -3945,7 +3941,7 @@ install-mkheaders: stmp-int-hdrs install-itoolsdirs \
+ 	set -e; for ml in `cat fixinc_list`; do \
+ 	  multi_dir=`echo $${ml} | sed -e 's/^[^;]*;//'`; \
+ 	  $(mkinstalldirs) $(DESTDIR)$(itoolsdatadir)/include$${multi_dir}; \
+-	  $(INSTALL_DATA) include-fixed$${multi_dir}/limits.h $(DESTDIR)$(itoolsdatadir)/include$${multi_dir}/limits.h; \
++	  $(INSTALL_DATA) include$${multi_dir}/limits.h $(DESTDIR)$(itoolsdatadir)/include$${multi_dir}/limits.h; \
+ 	done
+ 	$(INSTALL_SCRIPT) $(srcdir)/../mkinstalldirs \
+ 		$(DESTDIR)$(itoolsdir)/mkinstalldirs ; \
+diff --git a/gcc/configure b/gcc/configure
+index 7218b0c331a..187a07c5ec0 100755
+--- a/gcc/configure
++++ b/gcc/configure
+@@ -13297,6 +13297,12 @@ then
+     BUILD_LDFLAGS='$(LDFLAGS_FOR_BUILD)'
+ fi
+ 
++
++if test x$enable_fixincludes = xno;
++then
++    STMP_FIXINC=''
++fi
++
+ # Expand extra_headers to include complete path.
+ # This substitutes for lots of t-* files.
+ extra_headers_list=
+@@ -19423,7 +19429,7 @@ else
+   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+   lt_status=$lt_dlunknown
+   cat > conftest.$ac_ext <<_LT_EOF
+-#line 19426 "configure"
++#line 19432 "configure"
+ #include "confdefs.h"
+ 
+ #if HAVE_DLFCN_H
+@@ -19529,7 +19535,7 @@ else
+   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+   lt_status=$lt_dlunknown
+   cat > conftest.$ac_ext <<_LT_EOF
+-#line 19532 "configure"
++#line 19538 "configure"
+ #include "confdefs.h"
+ 
+ #if HAVE_DLFCN_H
+diff --git a/gcc/configure.ac b/gcc/configure.ac
+index 49f043ed29b..a1c55a921a4 100644
+--- a/gcc/configure.ac
++++ b/gcc/configure.ac
+@@ -2463,6 +2463,12 @@ then
+     BUILD_LDFLAGS='$(LDFLAGS_FOR_BUILD)'
+ fi
+ 
++
++if test x$enable_fixincludes = xno;
++then
++    STMP_FIXINC=''
++fi
++
+ # Expand extra_headers to include complete path.
+ # This substitutes for lots of t-* files.
+ extra_headers_list=
+-- 
+2.47.0
+
-- 
2.47.0

