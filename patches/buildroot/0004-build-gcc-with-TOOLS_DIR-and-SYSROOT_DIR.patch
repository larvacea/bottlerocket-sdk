From 88bd02e82312c201cf94dcfd7401621766b42b9f Mon Sep 17 00:00:00 2001
From: Martin Harriman <larvacea@mac.com>
Date: Mon, 4 Nov 2024 22:59:29 +0000
Subject: [PATCH 4/6] build gcc with TOOLS_DIR and SYSROOT_DIR

Most of the changes here are to the second and final stage of our GCC
build, so that the binaries are written to the new output path, and
so that it can find the interim headers and libraries needed to build
its C++ standard library for our target.

Because GCC contains logic to find its configured sysroot relative to
either its installed path or the overall filesystem root, we can rely
on that logic and do not need wrappers that hardcode the path. Those
wrappers would otherwise prevent us from relocating these tools into
a different location from that of the build host.

We build GCC with the linker build ID option so that all binaries get
the unique ID that allows core dumps to be matched to debug symbols
directly, rather than relying on filesystem layout.

We also enable pie and ssp by default.

Signed-off-by: Ben Cressey <bcressey@amazon.com>
---
 package/busybox/busybox.mk             |  2 +-
 package/gcc/gcc-final/gcc-final.mk     | 54 +++++++++++++++++++-------
 package/gcc/gcc-initial/gcc-initial.mk |  3 ++
 package/gcc/gcc.mk                     |  2 +-
 package/pkg-generic.mk                 |  3 +-
 5 files changed, 47 insertions(+), 17 deletions(-)

diff --git a/package/busybox/busybox.mk b/package/busybox/busybox.mk
index eb5e7ad922..99d60d1343 100644
--- a/package/busybox/busybox.mk
+++ b/package/busybox/busybox.mk
@@ -16,7 +16,7 @@ BUSYBOX_CPE_ID_VENDOR = busybox
 BUSYBOX_IGNORE_CVES += CVE-2022-28391
 
 BUSYBOX_CFLAGS = \
-	$(TARGET_CFLAGS)
+	$(TARGET_CFLAGS) -DMB_LEN_MAX=16
 
 BUSYBOX_LDFLAGS = \
 	$(TARGET_LDFLAGS)
diff --git a/package/gcc/gcc-final/gcc-final.mk b/package/gcc/gcc-final/gcc-final.mk
index 99d7047b5f..0803405e13 100644
--- a/package/gcc/gcc-final/gcc-final.mk
+++ b/package/gcc/gcc-final/gcc-final.mk
@@ -54,9 +54,16 @@ define HOST_GCC_FINAL_CONFIGURE_CMDS
 		LDFLAGS="$(HOST_LDFLAGS)" \
 		$(HOST_GCC_FINAL_CONF_ENV) \
 		./configure \
-		--prefix="$(HOST_DIR)" \
-		--sysconfdir="$(HOST_DIR)/etc" \
+		--prefix="/usr" \
+		--libdir="/usr/lib" \
+		--sysconfdir="/etc" \
 		--enable-static \
+		--disable-libcc1 \
+		--with-sysroot=$(SYSROOT_DIR) \
+		--with-build-sysroot=$(STAGING_DIR) \
+		--with-gcc-major-version-only \
+		--enable-default-pie \
+		--enable-default=ssp \
 		$(QUIET) $(HOST_GCC_FINAL_CONF_OPTS) \
 	)
 endef
@@ -77,12 +84,12 @@ HOST_GCC_FINAL_CONF_OPTS = \
 # doesn't use floating point operations.
 ifeq ($(BR2_sh4)$(BR2_sh4eb),y)
 HOST_GCC_FINAL_CONF_OPTS += "--with-multilib-list=m4,m4-nofpu"
-HOST_GCC_FINAL_GCC_LIB_DIR = $(HOST_DIR)/$(GNU_TARGET_NAME)/lib/!m4*
+HOST_GCC_FINAL_GCC_LIB_DIR = $(TOOLS_DIR)/usr/$(GNU_TARGET_NAME)/lib/!m4*
 else ifeq ($(BR2_sh4a)$(BR2_sh4aeb),y)
 HOST_GCC_FINAL_CONF_OPTS += "--with-multilib-list=m4a,m4a-nofpu"
-HOST_GCC_FINAL_GCC_LIB_DIR = $(HOST_DIR)/$(GNU_TARGET_NAME)/lib/!m4*
+HOST_GCC_FINAL_GCC_LIB_DIR = $(TOOLS_DIR)/usr/$(GNU_TARGET_NAME)/lib/!m4*
 else
-HOST_GCC_FINAL_GCC_LIB_DIR = $(HOST_DIR)/$(GNU_TARGET_NAME)/lib*
+HOST_GCC_FINAL_GCC_LIB_DIR = $(TOOLS_DIR)/$(GNU_TARGET_NAME)/sys-root/usr/lib*
 endif
 
 ifeq ($(BR2_GCC_SUPPORTS_LIBCILKRTS),y)
@@ -97,7 +104,7 @@ ifeq ($(BR2_PTHREADS_NONE),y)
 HOST_GCC_FINAL_CONF_OPTS += --disable-libcilkrts
 endif
 
-ifeq ($(BR2_STATIC_LIBS),y)
+ifeq (y,y)
 # disable libcilkrts as there is no static version
 HOST_GCC_FINAL_CONF_OPTS += --disable-libcilkrts
 endif
@@ -106,9 +113,7 @@ endif # BR2_GCC_SUPPORTS_LIBCILKRTS
 
 # Disable shared libs like libstdc++ if we do static since it confuses linking
 ifeq ($(BR2_STATIC_LIBS),y)
-HOST_GCC_FINAL_CONF_OPTS += --disable-shared
-else
-HOST_GCC_FINAL_CONF_OPTS += --enable-shared
+HOST_GCC_FINAL_CONF_OPTS += --enable-shared=libgcc,libstd++
 endif
 
 ifeq ($(BR2_GCC_ENABLE_OPENMP),y)
@@ -127,22 +132,27 @@ HOST_GCC_FINAL_CONF_ENV = \
 
 HOST_GCC_FINAL_MAKE_OPTS += $(HOST_GCC_COMMON_MAKE_OPTS)
 
+HOST_GCC_FINAL_INSTALL_OPTS = install
+HOST_GCC_FINAL_INSTALL_OPTS += DESTDIR=$(TOOLS_DIR)
+
 # Make sure we have 'cc'
 define HOST_GCC_FINAL_CREATE_CC_SYMLINKS
-	if [ ! -e $(HOST_DIR)/bin/$(GNU_TARGET_NAME)-cc ]; then \
-		ln -f $(HOST_DIR)/bin/$(GNU_TARGET_NAME)-gcc \
-			$(HOST_DIR)/bin/$(GNU_TARGET_NAME)-cc; \
+	if [ ! -e $(TOOLS_DIR)/usr/bin/$(GNU_TARGET_NAME)-cc ]; then \
+		ln -f $(TOOLS_DIR)/usr/bin/$(GNU_TARGET_NAME)-gcc \
+			$(TOOLS_DIR)/usr/bin/$(GNU_TARGET_NAME)-cc; \
 	fi
 endef
 
 HOST_GCC_FINAL_POST_INSTALL_HOOKS += HOST_GCC_FINAL_CREATE_CC_SYMLINKS
 
+ifeq ($(BR2_GCC_ENABLE_TOOLCHAIN_WRAPPER),y)
 HOST_GCC_FINAL_TOOLCHAIN_WRAPPER_ARGS += $(HOST_GCC_COMMON_TOOLCHAIN_WRAPPER_ARGS)
 HOST_GCC_FINAL_POST_BUILD_HOOKS += TOOLCHAIN_WRAPPER_BUILD
 HOST_GCC_FINAL_POST_INSTALL_HOOKS += TOOLCHAIN_WRAPPER_INSTALL
 # Note: this must be done after CREATE_CC_SYMLINKS, otherwise the
 # -cc symlink to the wrapper is not created.
 HOST_GCC_FINAL_POST_INSTALL_HOOKS += HOST_GCC_INSTALL_WRAPPER_AND_SIMPLE_SYMLINKS
+endif
 
 GCC_FINAL_LIBS =
 
@@ -179,7 +189,7 @@ GCC_FINAL_USR_LIBS += $(call qstrip,$(BR2_TOOLCHAIN_EXTRA_LIBS))
 define GCC_FINAL_INSTALL_STAGING_CMDS
 	$(foreach lib,$(GCC_FINAL_LIBS), \
 		cp -dpf $(HOST_GCC_FINAL_GCC_LIB_DIR)/$(lib)* \
-			$(STAGING_DIR)/lib/
+			$(STAGING_DIR)/usr/lib/
 	)
 	$(foreach lib,$(GCC_FINAL_USR_LIBS), \
 		cp -dpf $(HOST_GCC_FINAL_GCC_LIB_DIR)/$(lib)* \
@@ -187,7 +197,7 @@ define GCC_FINAL_INSTALL_STAGING_CMDS
 	)
 endef
 
-ifeq ($(BR2_STATIC_LIBS),)
+ifeq (y,)
 define GCC_FINAL_INSTALL_TARGET_CMDS
 	mkdir -p $(TARGET_DIR)/lib $(TARGET_DIR)/usr/lib
 	$(foreach lib,$(GCC_FINAL_LIBS), \
@@ -210,5 +220,21 @@ endef
 GCC_FINAL_POST_INSTALL_STAGING_HOOKS += HOST_GCC_FINAL_M68K_LIBGCC_FIXUP
 endif
 
+define HOST_GCC_FINAL_TOOLS_DIR_CLEANUP
+	rm -rf $(TOOLS_DIR)/usr/share
+	find $(TOOLS_DIR) -name '*.la' -delete
+	find $(TOOLS_DIR) -name '*.py' -delete
+endef
+
+define HOST_GCC_FINAL_TOOLS_DIR_SYSROOT
+	mkdir -p $(TOOLS_DIR)$(SYSROOT_DIR)/usr
+	test -d $(TOOLS_DIR)/usr/$(GNU_TARGET_NAME)/lib64 \
+		&& mv $(TOOLS_DIR)/usr/$(GNU_TARGET_NAME)/lib64 $(TOOLS_DIR)$(SYSROOT_DIR)/usr/lib \
+		|| mv $(TOOLS_DIR)/usr/$(GNU_TARGET_NAME)/lib $(TOOLS_DIR)$(SYSROOT_DIR)/usr/lib
+endef
+
+HOST_GCC_FINAL_POST_INSTALL_HOOKS += HOST_GCC_FINAL_TOOLS_DIR_CLEANUP
+HOST_GCC_FINAL_POST_INSTALL_HOOKS += HOST_GCC_FINAL_TOOLS_DIR_SYSROOT
+
 $(eval $(generic-package))
 $(eval $(host-autotools-package))
diff --git a/package/gcc/gcc-initial/gcc-initial.mk b/package/gcc/gcc-initial/gcc-initial.mk
index 1f8b76a942..6188710a01 100644
--- a/package/gcc/gcc-initial/gcc-initial.mk
+++ b/package/gcc/gcc-initial/gcc-initial.mk
@@ -36,6 +36,7 @@ HOST_GCC_INITIAL_CONF_OPTS = \
 	$(HOST_GCC_COMMON_CONF_OPTS) \
 	--enable-languages=c \
 	--disable-shared \
+	--with-sysroot=$(STAGING_DIR) \
 	--without-headers \
 	--disable-threads \
 	--with-newlib \
@@ -55,9 +56,11 @@ endif
 HOST_GCC_INITIAL_MAKE_OPTS = $(HOST_GCC_COMMON_MAKE_OPTS) all-gcc all-target-libgcc
 HOST_GCC_INITIAL_INSTALL_OPTS = install-gcc install-target-libgcc
 
+ifeq ($(BR2_GCC_ENABLE_TOOLCHAIN_WRAPPER),y)
 HOST_GCC_INITIAL_TOOLCHAIN_WRAPPER_ARGS += $(HOST_GCC_COMMON_TOOLCHAIN_WRAPPER_ARGS)
 HOST_GCC_INITIAL_POST_BUILD_HOOKS += TOOLCHAIN_WRAPPER_BUILD
 HOST_GCC_INITIAL_POST_INSTALL_HOOKS += TOOLCHAIN_WRAPPER_INSTALL
 HOST_GCC_INITIAL_POST_INSTALL_HOOKS += HOST_GCC_INSTALL_WRAPPER_AND_SIMPLE_SYMLINKS
+endif
 
 $(eval $(host-autotools-package))
diff --git a/package/gcc/gcc.mk b/package/gcc/gcc.mk
index 41a2dfb1cc..ecba801ed6 100644
--- a/package/gcc/gcc.mk
+++ b/package/gcc/gcc.mk
@@ -71,7 +71,6 @@ HOST_GCC_COMMON_DEPENDENCIES = \
 
 HOST_GCC_COMMON_CONF_OPTS = \
 	--target=$(GNU_TARGET_NAME) \
-	--with-sysroot=$(STAGING_DIR) \
 	--enable-__cxa_atexit \
 	--with-gnu-ld \
 	--disable-libssp \
@@ -79,6 +78,7 @@ HOST_GCC_COMMON_CONF_OPTS = \
 	--disable-decimal-float \
 	--enable-plugins \
 	--enable-lto \
+	--enable-linker-build-id \
 	--with-gmp=$(HOST_DIR) \
 	--with-mpc=$(HOST_DIR) \
 	--with-mpfr=$(HOST_DIR) \
diff --git a/package/pkg-generic.mk b/package/pkg-generic.mk
index c7419b00fb..52784972e3 100644
--- a/package/pkg-generic.mk
+++ b/package/pkg-generic.mk
@@ -278,7 +278,7 @@ $(BUILD_DIR)/%/.stamp_configured:
 # Build
 $(BUILD_DIR)/%/.stamp_built:
 	@$(call step_start,build)
-	@$(call MESSAGE,"Building")
+	@$(call MESSAGE,"Building $(PKG)")
 	$(foreach hook,$($(PKG)_PRE_BUILD_HOOKS),$(call $(hook))$(sep))
 	+$($(PKG)_BUILD_CMDS)
 	$(foreach hook,$($(PKG)_POST_BUILD_HOOKS),$(call $(hook))$(sep))
@@ -318,6 +318,7 @@ $(BUILD_DIR)/%/.stamp_host_installed:
 $(BUILD_DIR)/%/.stamp_staging_installed:
 	@$(call step_start,install-staging)
 	@$(call MESSAGE,"Installing to staging directory")
+	@$(call MESSAGE,"Foobar: $(PKG)")
 	$(foreach hook,$($(PKG)_PRE_INSTALL_STAGING_HOOKS),$(call $(hook))$(sep))
 	+$($(PKG)_INSTALL_STAGING_CMDS)
 	$(foreach hook,$($(PKG)_POST_INSTALL_STAGING_HOOKS),$(call $(hook))$(sep))
-- 
2.40.1

